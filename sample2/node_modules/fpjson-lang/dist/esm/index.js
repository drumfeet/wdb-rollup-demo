import*as e from"ramda";var _={Object,Array,String,Number,Boolean},a=i=>typeof i=="function",f=(i,n={})=>{if(e.isNil(i))return i;let r=e.curry(t=>{if(e.is(Array,t)){let R=[];for(let l of t)R.push(r(l));return R}else if(e.is(Object,t)){let R={};for(let l in t)R[l]=r(t[l]);return R}else return e.is(String,t)?t[0]==="%"?e.tail(t):(/^\$/.test(t)&&(t=o(e.tail(t),!0)),e.path(t.split("."))(n)):t}),o=e.curry((t,R)=>r(t)),g=e.curry((t,R)=>{let l=n;/^\$/.test(t)&&(t=o(e.tail(t),!0));let y=t.split(".");for(let c of e.init(y))e.isNil(l[c])&&(l[c]={}),l=l[c];return l[e.last(y)]=R,R}),s=null;if(a(i[0])){let t=e.tail(i);s=i[0](...t)}else e.is(Array)(i)&&i.length===1&&i[0]==="__"?s=e.__:i[0]==="typ"?s=_[i[1]]:i[0]==="reg"?s=new RegExp(...e.tail(i)):e.is(Array)(i)&&(e.includes(i[0])(["let","var","$"])||a(e[i[0]]))?(s=e.compose(e.ifElse(e.o(e.gt(e.__,0),e.length),e.apply(i[0]==="$"?r:i[0]==="var"?o:i[0]==="let"?g:e[i[0]]),e.always(e[i[0]])),e.map(t=>f(t,n)),e.tail)(i),s=typeof s>"u"?[]:s):e.is(Object)(i)&&e.is(String)(i.var)?s=e.path(i.var.split("."))(n):e.is(Array)(i)||e.is(Object)(i)?s=e.map(t=>f(t,n))(i):s=i;let u=null;return e.is(Array)(s)&&e.is(String)(s[0])&&s[0]==="[]"?u=e.tail(s):u=a(s?.[0])?f(s,n):s,u},b=f;export{b as default};
//# sourceMappingURL=index.js.map
